# .zshrc_ext
# 環境ごとの設定とか雑多なものを書いたりするファイル

# パスの設定
export PATH=$HOME/local/bin:/usr/local/bin:/usr/local/sbin:$PATH

# nodebrew
export PATH=$HOME/.nodebrew/current/bin:$PATH

# rbenv
eval "$(rbenv init -)"

# screen auto startup
if [ $TERM != "screen" -a "`screen -ls | grep Attache`" = "" ]; then
    screen -US hokamura -xRR
fi

# screenのステータスラインに最後に実行したコマンドを表示
if [ "$TERM" = "screen" ]; then
    #chpwd () { echo -n "_`dirs`\\" }
    preexec() {
        # see [zsh-workers:13180]
        # http://www.zsh.org/mla/workers/2000/msg03993.html
        emulate -L zsh
        local -a cmd; cmd=(${(z)2})
        case $cmd[1] in
            fg)
                if (( $#cmd == 1 )); then
                    cmd=(builtin jobs -l %+)
                else
                    cmd=(builtin jobs -l $cmd[2])
                fi
                ;;
            %*) 
                cmd=(builtin jobs -l $cmd[1])
                ;;
            cd)
                if (( $#cmd == 2)); then
                    cmd[1]=$cmd[2]
                fi
                ;&
            *)
                echo -n "k$cmd[1]:t\\"
                return
                ;;
        esac

        local -A jt; jt=(${(kv)jobtexts})

        $cmd >>(read num rest
            cmd=(${(z)${(e):-\$jt$num}})
            echo -n "k$cmd[1]:t\\") 2>/dev/null
    }
    chpwd () {}
fi

# 関数やaliasなど
alias -g G="| grep"
alias -g L="| less"
alias -g V="| vi -"

function alc() {
  if [ $# != 0 ]; then
    w3m "http://eow.alc.co.jp/$*/UTF-8/?ref=sa" | less +37
    #w3m "http://eow.alc.co.jp/$*/UTF-8/?ref=sa"
  else
    echo 'usage: alc word'
  fi
}

function pminfo() {
  if [ $# != 0 ]; then
    perl -le 'eval "require $ARGV[0]";print ${"${ARGV[0]}::VERSION"};print qx/perldoc -ml $ARGV[0]/' $*
  else
    echo 'usage: pminfo perlmodule'
  fi
}

# 補完関数リセット
function r() {
  local f
  f=(~/.zsh_fun/*(.))
  unfunction $f:t 2> /dev/null
  autoload -U $f:t
}

# jq wrapper
#
# e.g
# $ jqw package.json
# $ jqw package.json '.dependencies'
# $ jqw http://api.example.com/foo.json
# $ jqw http://api.example.com/foo.json '.query'
function jqw() {
  target=$1

  query=$2
  if [ -z "${query}" ]; then
    query='.'
  fi

  if [[ $1 =~ 'http' ]]; then
    curl -s $1 | jq $query
  else
    jq $query $1
  fi
}

# macvim
if [ -f /Applications/MacVim.app/Contents/MacOS/Vim ]; then
  alias vim="/Applications/MacVim.app/Contents/MacOS/Vim -g --remote-tab-silent"
fi

# bundle 
alias be="bundle exec"
alias bi="bundle install --without=production --path vendor/bundle"

# added by travis gem
[ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh
